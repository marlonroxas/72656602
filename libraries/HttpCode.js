exports.HTTP_200 = 200 // OK - Successful retrieval of a resource via GET HTTP Method or successful update of a resource via PUT HTTP Method.
exports.HTTP_201 = 201 // Created - Successful creation of a resource via POST HTTP Method.
exports.HTTP_202 = 202 // Accepted - Successful acceptance of the request. This means that the server successfully accepted the request but will process it at a later time; commonly used for "queuing".
exports.HTTP_204 = 204 // No Content - Successful deletion of a resource via DELETE HTTP Method.
exports.HTTP_400 = 400 // Bad Request - General unclassified errors based on the following error codes. This will be used also for errors in form validations since form validations could contain a mixed set of errors.
exports.HTTP_401 = 401 // Unauthorized - The user/client is not authenticated. Typically used when the credential passed for access token request or login is invalid.
exports.HTTP_402 = 402 // Payment Required - Best used for cases wherein payment via STORM Credits is needed due to insufficient balance.
exports.HTTP_403 = 403 // Forbidden - The user/client does not have enough privileges to access the resource/action. Typically used when a authenticated non-admin user accessess an admin page.
exports.HTTP_404 = 404 // Not Found - The resource being requested is not found. For example, requesting for a user information but the user is not in the system.
exports.HTTP_405 = 405 // Method Not Allowed - The HTTP Request Method used is not allowed. Using POST for a GET-only endpoint.
exports.HTTP_406 = 406 // Not Acceptable - The "Accept" header provided is not valid in the server side. For our case, the accepted values/MIME Types would be "application/json" for most cases, or "text/plain" for rare cases. This means that the server is returning a body with JSON contents.
exports.HTTP_408 = 408 // Request Timeout - The server reached the maximum request waiting time to process the request. Receiving this could mean that the request is still being processed; especially for asynchronous systems.
exports.HTTP_409 = 409 // Conflict - The resource being requested to be created is already existing in the system. This is best used for duplicate entries.
exports.HTTP_412 = 412 // Precondition Failed - The request does not contain the necessary precondition requirements. This could be used for cases wherein if ParamA is set to True, ParamB should have a particular value. Or other pre-determined conditions were not met; things like adding a credit to an uncreated wallet or assigning a benefit to a user wherein the benefit/user is not yet created.
exports.HTTP_413 = 413 // Payload Too Large - Best used for cases wherein the provided value exceeded the allowed size/length. Exception would be when validating forms since form validation could contain multiple errors.
exports.HTTP_422 = 422 // Unprocessable Entity - The server could understand the request but determines that there are missing information to proceed with the processing. Most common use is for missing required fields.
exports.HTTP_426 = 426 // Upgrade Required - This could be used for telling the client that an upgrade is needed. Best case to use for an endpoint that will be asked by the clients, especially, mobile apps, if an upgrade is required.
exports.HTTP_500 = 500 // Internal Server Error - Server Error. Typically means that there is a bug/unhandled scenarios in the code.
